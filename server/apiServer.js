// NOTE: this server is purely a dev-mode server. In production, the
// server/index.js server also serves the API routes.

const express = require('express');
const compression = require('compression');
const cookieParser = require('cookie-parser');
const cors = require('cors');

const { configureEnv } = require('./env');
const { loadScripts } = require('./scripts');

async function startServer() {
  try {
    // Configure process.env with .env.* files and SecretManager
    await configureEnv();
    // Load the Event Listeners Scripts
    loadScripts();

    const apiRouter = require('./apiRouter');
    const { auth0RequestHandler } = require('./api/auth/auth0');
    const wellKnownRouter = require('./wellKnownRouter');
    const webmanifestResourceRoute = require('./resources/webmanifest');
    const robotsTxtRoute = require('./resources/robotsTxt');
    const sitemapResourceRoute = require('./resources/sitemap');

    const radix = 10;
    const PORT = parseInt(process.env.REACT_APP_DEV_API_SERVER_PORT, radix);
    const app = express();

    // NOTE: CORS is only needed in this dev API server because it's
    // running in a different port than the main app.
    app.use(
      cors({
        origin: process.env.REACT_APP_MARKETPLACE_ROOT_URL,
        credentials: true,
      })
    );
    app.use(cookieParser());
    app.use(auth0RequestHandler);
    app.use('/.well-known', wellKnownRouter);
    app.use('/api', apiRouter);

    // Generate web app manifest
    // When developing with "yarn run dev",
    // you can reach the manifest from http://localhost:3500/site.webmanifest
    // The corresponding <link> element is set in src/components/Page/Page.js
    app.get('/site.webmanifest', webmanifestResourceRoute);

    // robots.txt and sitemap-* fetches should return similarly compressed data as server/index.js
    app.use(compression());

    // robots.txt is generated by resources/robotsTxt.js
    // It creates the sitemap URL with the correct marketplace URL
    app.get('/robots.txt', robotsTxtRoute);

    // Handle different sitemap-* resources. E.g. /sitemap-index.xml
    app.get('/sitemap-:resource', sitemapResourceRoute);

    app.listen(PORT, () => {
      console.log(`API server listening on ${PORT}`);
    });
  } catch (err) {
    throw err;
  }
}

startServer();
